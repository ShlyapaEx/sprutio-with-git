// Generated by CoffeeScript 1.11.1
Ext.define('FM.view.toolbars.MainButtonsToolbar', {
  extend: 'Ext.toolbar.Toolbar',
  alias: 'widget.main-buttons-toolbar',
  id: "fm-main-buttons-toolbar",
  border: false,
  overflowX: 'auto',
  overflowY: 'hidden',
  style: {
    borderStyle: 'none'
  },
  items: [],
  requires: ['Ext.container.ButtonGroup'],
  initComponent: function() {
    FM.Logger.log('FM.view.toolbars.MainButtonsToolbar init');
    this.items = [];
    this.items.push({
      xtype: "buttongroup",
      frame: true,
      bodyBorder: true,
      height: 80,
      items: [
        {
          xtype: 'button',
          name: FM.Actions.HomeFtp.getIconCls(),
          text: FM.Actions.HomeFtp.getMenuText(),
          iconCls: FM.Actions.HomeFtp.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              return FM.Actions.HomeFtp.execute(FM.Active);
            };
          })(this)
        }, {
          xtype: 'button',
          name: FM.Actions.RemoteConnections.getIconCls(),
          text: FM.Actions.RemoteConnections.getMenuText(),
          iconCls: FM.Actions.RemoteConnections.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              return FM.Actions.RemoteConnections.execute(FM.Active);
            };
          })(this)
        }, {
          xtype: 'button',
          name: FM.Actions.Refresh.getIconCls(),
          text: FM.Actions.Refresh.getMenuText(),
          iconCls: FM.Actions.Refresh.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              return FM.Actions.Refresh.execute([FM.Left, FM.Right]);
            };
          })(this)
        }, {
          xtype: 'button',
          name: FM.Actions.NewFolder.getIconCls(),
          text: FM.Actions.NewFolder.getMenuText(),
          iconCls: FM.Actions.NewFolder.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              return FM.Actions.NewFolder.execute(FM.Active);
            };
          })(this)
        }, {
          xtype: 'button',
          name: FM.Actions.Upload.getIconCls(),
          text: FM.Actions.Upload.getMenuText(),
          iconCls: FM.Actions.Upload.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              return FM.Actions.Upload.execute();
            };
          })(this)
        }, {
          xtype: 'button',
          name: FM.Actions.CreateArchive.getIconCls(),
          text: FM.Actions.CreateArchive.getMenuText(),
          iconCls: FM.Actions.CreateArchive.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: function() {
            var records;
            records = FM.helpers.GetSelected(FM.Active);
            return FM.Actions.CreateArchive.execute(FM.Active, records);
          }
        }, {
          xtype: 'button',
          name: FM.Actions.DownloadArchive.getIconCls(),
          text: FM.Actions.DownloadArchive.getMenuText(),
          iconCls: FM.Actions.DownloadArchive.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              var records;
              records = FM.helpers.GetSelected(FM.Active);
              return FM.Actions.DownloadArchive.execute(FM.Active, records);
            };
          })(this)
        }, {
          xtype: 'button',
          name: FM.Actions.SearchFiles.getIconCls(),
          text: FM.Actions.SearchFiles.getMenuText(),
          iconCls: FM.Actions.SearchFiles.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              return FM.Actions.SearchFiles.execute(FM.Active);
            };
          })(this)
        }, {
          xtype: 'button',
          name: FM.Actions.SearchText.getIconCls(),
          text: FM.Actions.SearchText.getMenuText(),
          iconCls: FM.Actions.SearchText.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              return FM.Actions.SearchText.execute(FM.Active);
            };
          })(this)
        }, {
          xtype: 'button',
          name: FM.Actions.AnalyzeSize.getIconCls(),
          text: FM.Actions.AnalyzeSize.getMenuText(),
          iconCls: FM.Actions.AnalyzeSize.getIconCls(),
          scale: 'large',
          iconAlign: 'top',
          handler: (function(_this) {
            return function() {
              return FM.Actions.AnalyzeSize.execute(FM.Active, FM.Active.session.path);
            };
          })(this)
        }
      ]
    });
    return this.callParent(arguments);
  }
});
