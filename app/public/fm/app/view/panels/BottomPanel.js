// Generated by CoffeeScript 1.11.1
Ext.define('FM.view.panels.BottomPanel', {
  extend: 'Ext.panel.Panel',
  alias: 'widget.bottom-panel',
  region: "south",
  id: "fm-hotkeys",
  layout: {
    type: "hbox",
    align: "middle"
  },
  defaults: {
    flex: 1,
    margin: 0
  },
  items: [],
  tbar: {
    cls: 'fm-windows-toolbar',
    layout: {
      type: 'hbox',
      align: 'left'
    },
    defaults: {
      margin: 0
    },
    items: []
  },
  initComponent: function() {
    FM.Logger.log('FM.view.panels.BottomPanel');
    this.items = [
      Ext.create("Ext.button.Button", {
        id: "hot-button-view",
        text: FM.Actions.View.getButtonText(),
        handler: function() {
          var record;
          record = FM.helpers.GetLastSelected(FM.Active);
          return FM.Actions.View.execute(FM.Active, record);
        }
      }), Ext.create("Ext.button.Button", {
        id: "hot-button-edit",
        text: FM.Actions.Edit.getText() + ' [ Ctrl + 4 ]',
        handler: function() {
          var record;
          record = FM.helpers.GetLastSelected(FM.Active);
          return FM.Actions.Edit.execute(FM.Active, record);
        }
      }), Ext.create("Ext.button.Button", {
        id: "hot-button-copy",
        text: FM.Actions.Copy.getText() + ' [ Ctrl + 5 ]',
        handler: function() {
          var records;
          records = FM.helpers.GetSelected(FM.Active);
          return FM.Actions.Copy.execute(FM.Active, FM.helpers.NextPanel(FM.Active), FM.helpers.NextPanel(FM.Active).session.path, records);
        }
      }), Ext.create("Ext.button.Button", {
        id: "hot-button-move",
        text: FM.Actions.Move.getText() + ' [ Shift + 5 ]',
        handler: function() {
          var records;
          records = FM.helpers.GetSelected(FM.Active);
          return FM.Actions.Move.execute(FM.Active, FM.helpers.NextPanel(FM.Active), records);
        }
      }), Ext.create("Ext.button.Button", {
        id: "hot-button-rename",
        text: FM.Actions.Rename.getText() + ' [ Ctrl + 6 ]',
        handler: function() {
          var record;
          record = FM.helpers.GetLastSelected(FM.Active);
          return FM.Actions.Rename.execute(FM.Active, record);
        }
      }), Ext.create("Ext.button.Button", {
        id: "hot-button-mkdir",
        text: FM.Actions.NewFolder.getText() + ' [ Ctrl + 7 ]',
        handler: function() {
          return FM.Actions.NewFolder.execute(FM.Active);
        }
      }), Ext.create("Ext.button.Button", {
        id: "hot-button-remove",
        text: FM.Actions.Remove.getText() + ' [ Ctrl + 8 ]',
        handler: function() {
          var records;
          records = FM.helpers.GetSelected(FM.Active);
          if (records.length === 0) {

          } else {
            return FM.Actions.Remove.execute(FM.Active, FM.helpers.GetAbsNames(FM.Active.session, records));
          }
        }
      })
    ];
    return this.callParent(arguments);
  },
  updateState: function(panel, files) {
    var copy_button, edit_button, mkdir_button, move_button, remove_button, rename_button, view_button;
    view_button = Ext.ComponentQuery.query("#hot-button-view", this)[0];
    edit_button = Ext.ComponentQuery.query("#hot-button-edit", this)[0];
    copy_button = Ext.ComponentQuery.query("#hot-button-copy", this)[0];
    move_button = Ext.ComponentQuery.query("#hot-button-move", this)[0];
    rename_button = Ext.ComponentQuery.query("#hot-button-rename", this)[0];
    mkdir_button = Ext.ComponentQuery.query("#hot-button-mkdir", this)[0];
    remove_button = Ext.ComponentQuery.query("#hot-button-remove", this)[0];
    if (FM.helpers.isAllowed(FM.Actions.View, panel, files)) {
      view_button.setDisabled(false);
    } else {
      view_button.setDisabled(true);
    }
    if (FM.helpers.isAllowed(FM.Actions.Edit, panel, files)) {
      edit_button.setDisabled(false);
    } else {
      edit_button.setDisabled(true);
    }
    if (FM.helpers.isAllowed(FM.Actions.Copy, panel, files)) {
      copy_button.setDisabled(false);
    } else {
      copy_button.setDisabled(true);
    }
    if (FM.helpers.isAllowed(FM.Actions.Move, panel, files)) {
      move_button.setDisabled(false);
    } else {
      move_button.setDisabled(true);
    }
    if (FM.helpers.isAllowed(FM.Actions.Rename, panel, files)) {
      rename_button.setDisabled(false);
    } else {
      rename_button.setDisabled(true);
    }
    if (FM.helpers.isAllowed(FM.Actions.NewFolder, panel, files)) {
      mkdir_button.setDisabled(false);
    } else {
      mkdir_button.setDisabled(true);
    }
    if (FM.helpers.isAllowed(FM.Actions.Remove, panel, files)) {
      return remove_button.setDisabled(false);
    } else {
      return remove_button.setDisabled(true);
    }
  }
});
