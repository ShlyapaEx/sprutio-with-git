// Generated by CoffeeScript 1.11.1
Ext.define('FM.action.ViewImage', {
  extend: 'FM.overrides.Action',
  requires: ['FM.view.windows.ImageViewer', 'FM.view.windows.ProgressWindow'],
  config: {
    iconCls: "fm-action-view-image",
    text: t("View Image"),
    handler: function(panel, record) {
      var bottom_toolbar, images_list, session, wait;
      FM.Logger.info('Run Action FM.action.ViewImage', arguments);
      if (record.get("size") > FM.File.MAX_SIZE) {
        return FM.helpers.ShowError(t("The file is too large for viewing."));
      }
      bottom_toolbar = Ext.ComponentQuery.query("bottom-panel")[0].getDockedItems("toolbar[dock='top']")[0];
      session = Ext.ux.Util.clone(panel.session);
      wait = Ext.create('FM.view.windows.ProgressWindow', {
        cancelable: false,
        msg: t("Reading image, please wait...")
      });
      wait.show();
      images_list = FM.helpers.GetImageFiles(panel);
      return FM.backend.ajaxSend('/actions/files/read_images', {
        params: {
          session: session,
          paths: FM.helpers.GetAbsNames(session, images_list)
        },
        success: (function(_this) {
          return function(response) {
            var i, image_name, image_record, j, len, len1, ref, response_data, win;
            response_data = Ext.util.JSON.decode(response.responseText).data;
            wait.close();
            ref = response_data.file_list.succeed;
            for (i = 0, len = ref.length; i < len; i++) {
              image_name = ref[i];
              if (record.get('name') === image_name) {
                record.set('src', '/image_cache/' + response_data.sid + '/' + response_data.hash + '/' + image_name);
              }
              for (j = 0, len1 = images_list.length; j < len1; j++) {
                image_record = images_list[j];
                if (image_record.get('name') === image_name) {
                  image_record.set('src', '/image_cache/' + response_data.sid + '/' + response_data.hash + '/' + image_name);
                }
              }
            }
            FM.Logger.debug('Success', response_data, images_list, record);
            win = Ext.create("FM.view.windows.ImageViewer", {
              taskBar: bottom_toolbar,
              imageRecords: images_list,
              imageCurrent: record
            });
            win.setSession(session);
            win.show();
            return FM.Logger.info('Viewer window done', win);
          };
        })(this),
        failure: (function(_this) {
          return function(response) {
            wait.close();
            FM.helpers.ShowError(t("Error during reading image.<br/> Please contact Support."));
            return FM.Logger.error(response);
          };
        })(this)
      });
    }
  }
});
