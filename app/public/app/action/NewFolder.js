// Generated by CoffeeScript 1.11.1
Ext.define('FM.action.NewFolder', {
  extend: 'FM.overrides.Action',
  requires: ['FM.view.windows.PromtWindow'],
  config: {
    scale: "large",
    iconAlign: "top",
    iconCls: "fm-action-mkdir",
    text: t("New Folder"),
    buttonText: t("New Folder [ Ctrl + 7 ]"),
    handler: function(panel) {
      var promt, session;
      if (panel == null) {
        panel = FM.Active;
      }
      FM.Logger.info('Run Action FM.action.NewFolder', arguments);
      session = Ext.ux.Util.clone(panel.session);
      promt = Ext.create('FM.view.windows.PromtWindow', {
        title: t("Make Directory"),
        msg: t("Enter name for the new directory:"),
        fieldValue: "new_folder",
        ok: function(button, promt_window, field) {
          var name, path, record;
          FM.Logger.debug('ok handler()', arguments);
          button.disable();
          name = field.getValue();
          if (panel.filelist.store.find("name", name, 0, false, false, true) > -1) {
            FM.helpers.ShowError(t("Folder with this name already exists in the current folder."));
            button.enable();
            return;
          }
          record = FM.model.File.create({
            name: name
          });
          path = FM.helpers.GetAbsName(session, record);
          return FM.backend.ajaxSend('/actions/files/mkdir', {
            params: {
              session: session,
              path: path
            },
            success: (function(_this) {
              return function(response) {
                var item;
                item = Ext.util.JSON.decode(response.responseText).data;
                FM.getApplication().fireEvent(FM.Events.file.makeDirectory, item, session);
                return promt_window.close();
              };
            })(this),
            failure: (function(_this) {
              return function(response) {
                button.enable();
                FM.helpers.ShowError(t("Error during operation. <br/>Please contact Support."));
                return FM.Logger.error(response);
              };
            })(this)
          });
        }
      });
      return promt.show();
    }
  }
});
